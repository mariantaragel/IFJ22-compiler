.IFJcode22
DEFVAR GF@_lhs
DEFVAR GF@_rhs
DEFVAR GF@_tlhs
DEFVAR GF@_trhs
JUMP program_start



LABEL &add_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok1 GF@_tlhs string@string
WRITE int@7
EXIT int@7
LABEL ?type_ok1
JUMPIFNEQ ?skip_nil_conversion1 GF@_tlhs string@nil
MOVE GF@_lhs int@0
LABEL ?skip_nil_conversion1
TYPE GF@_tlhs GF@_lhs
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok2 GF@_trhs string@string
WRITE int@7
EXIT int@7
LABEL ?type_ok2
JUMPIFNEQ ?skip_nil_conversion2 GF@_trhs string@nil
MOVE GF@_rhs int@0
LABEL ?skip_nil_conversion2
TYPE GF@_trhs GF@_rhs
JUMPIFEQ ?add_op?execute GF@_tlhs GF@_trhs
JUMPIFEQ ?add_op?convert_rhs GF@_tlhs string@float
INT2FLOAT GF@_lhs GF@_lhs
JUMP ?add_op?execute
LABEL ?add_op?convert_rhs
INT2FLOAT GF@_rhs GF@_rhs
LABEL ?add_op?execute
ADD GF@_lhs GF@_lhs GF@_rhs
PUSHS GF@_lhs
RETURN



LABEL &mul_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok3 GF@_tlhs string@string
WRITE int@7
EXIT int@7
LABEL ?type_ok3
JUMPIFNEQ ?skip_nil_conversion3 GF@_tlhs string@nil
MOVE GF@_lhs int@0
LABEL ?skip_nil_conversion3
TYPE GF@_tlhs GF@_lhs
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok4 GF@_trhs string@string
WRITE int@7
EXIT int@7
LABEL ?type_ok4
JUMPIFNEQ ?skip_nil_conversion4 GF@_trhs string@nil
MOVE GF@_rhs int@0
LABEL ?skip_nil_conversion4
TYPE GF@_trhs GF@_rhs
JUMPIFEQ ?mul_op?execute GF@_tlhs GF@_trhs
JUMPIFEQ ?mul_op?convert_rhs GF@_tlhs string@float
INT2FLOAT GF@_lhs GF@_lhs
JUMP ?mul_op?execute
LABEL ?mul_op?convert_rhs
INT2FLOAT GF@_rhs GF@_rhs
LABEL ?mul_op?execute
MUL GF@_lhs GF@_lhs GF@_rhs
PUSHS GF@_lhs
RETURN



LABEL &sub_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok5 GF@_tlhs string@string
WRITE int@7
EXIT int@7
LABEL ?type_ok5
JUMPIFNEQ ?skip_nil_conversion5 GF@_tlhs string@nil
MOVE GF@_lhs int@0
LABEL ?skip_nil_conversion5
TYPE GF@_tlhs GF@_lhs
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok6 GF@_trhs string@string
WRITE int@7
EXIT int@7
LABEL ?type_ok6
JUMPIFNEQ ?skip_nil_conversion6 GF@_trhs string@nil
MOVE GF@_rhs int@0
LABEL ?skip_nil_conversion6
TYPE GF@_trhs GF@_rhs
JUMPIFEQ ?sub_op?execute GF@_tlhs GF@_trhs
JUMPIFEQ ?sub_op?convert_rhs GF@_tlhs string@float
INT2FLOAT GF@_lhs GF@_lhs
JUMP ?sub_op?execute
LABEL ?sub_op?convert_rhs
INT2FLOAT GF@_rhs GF@_rhs
LABEL ?sub_op?execute
SUB GF@_lhs GF@_lhs GF@_rhs
PUSHS GF@_lhs
RETURN



LABEL &div_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok7 GF@_tlhs string@string
EXIT int@7
LABEL ?type_ok7
JUMPIFNEQ ?skip_nil_conversion7 GF@_tlhs string@nil
MOVE GF@_lhs int@0
LABEL ?skip_nil_conversion7
TYPE GF@_tlhs GF@_lhs
JUMPIFEQ int_conversion_1 GF@_tlhs string@float
INT2FLOAT GF@_lhs GF@_lhs
LABEL int_conversion_1
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok8 GF@_trhs string@string
EXIT int@7
LABEL ?type_ok8
JUMPIFNEQ ?skip_nil_conversion8 GF@_trhs string@nil
MOVE GF@_rhs int@0
LABEL ?skip_nil_conversion8
TYPE GF@_trhs GF@_rhs
JUMPIFEQ int_conversion_2 GF@_trhs string@float
INT2FLOAT GF@_rhs GF@_rhs
LABEL int_conversion_2
DIV GF@_lhs GF@_lhs GF@_rhs
PUSHS GF@_lhs
RETURN
LABEL &concat_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok9 GF@_tlhs string@float
JUMPIFNEQ ?type_ok9 GF@_tlhs string@int
EXIT int@7
LABEL ?type_ok9
JUMPIFNEQ ?skip_nil_conversion9 GF@_tlhs string@nil
MOVE GF@_lhs string@
LABEL ?skip_nil_conversion9
TYPE GF@_tlhs GF@_lhs
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok10 GF@_trhs string@float
JUMPIFNEQ ?type_ok10 GF@_trhs string@int
EXIT int@7
LABEL ?type_ok10
JUMPIFNEQ ?skip_nil_conversion10 GF@_trhs string@nil
MOVE GF@_rhs string@
LABEL ?skip_nil_conversion10
TYPE GF@_trhs GF@_rhs
CONCAT GF@_lhs GF@_lhs GF@_rhs
PUSHS GF@_lhs
RETURN



LABEL &eq_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok11 GF@_tlhs string@bool
EXIT int@7
LABEL ?type_ok11
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok12 GF@_trhs string@bool
EXIT int@7
LABEL ?type_ok12
JUMPIFEQ ?eq_op?execute GF@_tlhs GF@_trhs
MOVE GF@_lhs bool@false
JUMP ?eq_op?end
LABEL ?eq_op?execute
EQ GF@_lhs GF@_lhs GF@_rhs
LABEL ?eq_op?end
PUSHS GF@_lhs
RETURN



LABEL &neq_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok13 GF@_tlhs string@bool
EXIT int@7
LABEL ?type_ok13
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok14 GF@_trhs string@bool
EXIT int@7
LABEL ?type_ok14
JUMPIFEQ ?neq_op?execute GF@_tlhs GF@_trhs
MOVE GF@_lhs bool@true
JUMP ?neq_op?end
LABEL ?neq_op?execute
EQ GF@_lhs GF@_lhs GF@_rhs
NOT GF@_lhs GF@_lhs
LABEL ?neq_op?end
PUSHS GF@_lhs
RETURN



LABEL program_start



PUSHS int@2
PUSHS int@6
PUSHS int@2
CALL &mul_op
PUSHS int@8
PUSHS int@12
CALL &add_op
CALL &sub_op
CALL &div_op
BREAK
