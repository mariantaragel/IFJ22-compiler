.IFJcode22
DEFVAR GF@_lhs
DEFVAR GF@_rhs
DEFVAR GF@_tlhs
DEFVAR GF@_trhs
DEFVAR GF@_aux1
JUMP program_start



LABEL &add_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok_1 GF@_tlhs string@string
EXIT int@7
LABEL ?type_ok_1
JUMPIFNEQ ?skip_nil_conversion_1 GF@_tlhs string@nil
MOVE GF@_lhs int@0
LABEL ?skip_nil_conversion_1
TYPE GF@_tlhs GF@_lhs
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok_2 GF@_trhs string@string
EXIT int@7
LABEL ?type_ok_2
JUMPIFNEQ ?skip_nil_conversion_2 GF@_trhs string@nil
MOVE GF@_rhs int@0
LABEL ?skip_nil_conversion_2
TYPE GF@_trhs GF@_rhs
JUMPIFEQ ?add_op?execute GF@_tlhs GF@_trhs
JUMPIFEQ ?add_op?convert_rhs GF@_tlhs string@float
INT2FLOAT GF@_lhs GF@_lhs
JUMP ?add_op?execute
LABEL ?add_op?convert_rhs
INT2FLOAT GF@_rhs GF@_rhs
LABEL ?add_op?execute
ADD GF@_lhs GF@_lhs GF@_rhs
PUSHS GF@_lhs
RETURN



LABEL &mul_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok_3 GF@_tlhs string@string
EXIT int@7
LABEL ?type_ok_3
JUMPIFNEQ ?skip_nil_conversion_3 GF@_tlhs string@nil
MOVE GF@_lhs int@0
LABEL ?skip_nil_conversion_3
TYPE GF@_tlhs GF@_lhs
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok_4 GF@_trhs string@string
EXIT int@7
LABEL ?type_ok_4
JUMPIFNEQ ?skip_nil_conversion_4 GF@_trhs string@nil
MOVE GF@_rhs int@0
LABEL ?skip_nil_conversion_4
TYPE GF@_trhs GF@_rhs
JUMPIFEQ ?mul_op?execute GF@_tlhs GF@_trhs
JUMPIFEQ ?mul_op?convert_rhs GF@_tlhs string@float
INT2FLOAT GF@_lhs GF@_lhs
JUMP ?mul_op?execute
LABEL ?mul_op?convert_rhs
INT2FLOAT GF@_rhs GF@_rhs
LABEL ?mul_op?execute
MUL GF@_lhs GF@_lhs GF@_rhs
PUSHS GF@_lhs
RETURN



LABEL &sub_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok_5 GF@_tlhs string@string
EXIT int@7
LABEL ?type_ok_5
JUMPIFNEQ ?skip_nil_conversion_5 GF@_tlhs string@nil
MOVE GF@_lhs int@0
LABEL ?skip_nil_conversion_5
TYPE GF@_tlhs GF@_lhs
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok_6 GF@_trhs string@string
EXIT int@7
LABEL ?type_ok_6
JUMPIFNEQ ?skip_nil_conversion_6 GF@_trhs string@nil
MOVE GF@_rhs int@0
LABEL ?skip_nil_conversion_6
TYPE GF@_trhs GF@_rhs
JUMPIFEQ ?sub_op?execute GF@_tlhs GF@_trhs
JUMPIFEQ ?sub_op?convert_rhs GF@_tlhs string@float
INT2FLOAT GF@_lhs GF@_lhs
JUMP ?sub_op?execute
LABEL ?sub_op?convert_rhs
INT2FLOAT GF@_rhs GF@_rhs
LABEL ?sub_op?execute
SUB GF@_lhs GF@_lhs GF@_rhs
PUSHS GF@_lhs
RETURN



LABEL &div_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok_7 GF@_tlhs string@string
EXIT int@7
LABEL ?type_ok_7
JUMPIFNEQ ?skip_nil_conversion_7 GF@_tlhs string@nil
MOVE GF@_lhs int@0
LABEL ?skip_nil_conversion_7
TYPE GF@_tlhs GF@_lhs
JUMPIFEQ ?skip_int_conversion_1 GF@_tlhs string@float
INT2FLOAT GF@_lhs GF@_lhs
LABEL ?skip_int_conversion_1
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok_8 GF@_trhs string@string
EXIT int@7
LABEL ?type_ok_8
JUMPIFNEQ ?skip_nil_conversion_8 GF@_trhs string@nil
MOVE GF@_rhs int@0
LABEL ?skip_nil_conversion_8
TYPE GF@_trhs GF@_rhs
JUMPIFEQ ?skip_int_conversion_2 GF@_trhs string@float
INT2FLOAT GF@_rhs GF@_rhs
LABEL ?skip_int_conversion_2
DIV GF@_lhs GF@_lhs GF@_rhs
PUSHS GF@_lhs
RETURN
LABEL &concat_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFEQ ?type_ok_9 GF@_tlhs string@string
JUMPIFEQ ?type_ok_9 GF@_tlhs string@nil
EXIT int@7
LABEL ?type_ok_9
JUMPIFNEQ ?skip_nil_conversion_9 GF@_tlhs string@nil
MOVE GF@_lhs string@
LABEL ?skip_nil_conversion_9
TYPE GF@_tlhs GF@_lhs
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFEQ ?type_ok_10 GF@_trhs string@string
JUMPIFEQ ?type_ok_10 GF@_trhs string@nil
EXIT int@7
LABEL ?type_ok_10
JUMPIFNEQ ?skip_nil_conversion_10 GF@_trhs string@nil
MOVE GF@_rhs string@
LABEL ?skip_nil_conversion_10
TYPE GF@_trhs GF@_rhs
CONCAT GF@_lhs GF@_lhs GF@_rhs
PUSHS GF@_lhs
RETURN



LABEL &eq_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok_11 GF@_tlhs string@bool
EXIT int@7
LABEL ?type_ok_11
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok_12 GF@_trhs string@bool
EXIT int@7
LABEL ?type_ok_12
JUMPIFEQ ?eq_op?execute GF@_tlhs GF@_trhs
MOVE GF@_lhs bool@false
JUMP ?eq_op?end
LABEL ?eq_op?execute
EQ GF@_lhs GF@_lhs GF@_rhs
LABEL ?eq_op?end
PUSHS GF@_lhs
RETURN



LABEL &neq_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok_13 GF@_tlhs string@bool
EXIT int@7
LABEL ?type_ok_13
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok_14 GF@_trhs string@bool
EXIT int@7
LABEL ?type_ok_14
JUMPIFEQ ?neq_op?execute GF@_tlhs GF@_trhs
MOVE GF@_lhs bool@true
JUMP ?neq_op?end
LABEL ?neq_op?execute
EQ GF@_lhs GF@_lhs GF@_rhs
NOT GF@_lhs GF@_lhs
LABEL ?neq_op?end
PUSHS GF@_lhs
RETURN



LABEL &lt_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok_15 GF@_tlhs string@bool
EXIT int@7
LABEL ?type_ok_15
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok_16 GF@_trhs string@bool
EXIT int@7
LABEL ?type_ok_16
JUMPIFNEQ ?lt_op?lhs_not_nil GF@_tlhs string@nil
MOVE GF@_lhs bool@false
JUMP ?lt_op?end
LABEL ?lt_op?lhs_not_nil
JUMPIFNEQ ?lt_op?rhs_not_nil GF@_trhs string@nil
MOVE GF@_lhs bool@false
JUMP ?lt_op?end
LABEL ?lt_op?rhs_not_nil
JUMPIFEQ ?lt_op?execute GF@_tlhs GF@_trhs
JUMPIFNEQ ?lt_op?lhs_not_string GF@_tlhs string@string
MOVE GF@_lhs bool@false
JUMP ?lt_op?end
LABEL ?lt_op?lhs_not_string
JUMPIFNEQ ?lt_op?rhs_not_string GF@_trhs string@string
MOVE GF@_lhs bool@false
JUMP ?lt_op?end
LABEL ?lt_op?rhs_not_string
JUMPIFNEQ ?lt_op?skip_lhs_cast GF@_tlhs string@int
INT2FLOAT GF@_lhs GF@_lhs
LABEL ?lt_op?skip_lhs_cast
JUMPIFNEQ ?lt_op?skip_rhs_cast GF@_trhs string@int
INT2FLOAT GF@_rhs GF@_rhs
LABEL ?lt_op?skip_rhs_cast
LABEL ?lt_op?execute
LT GF@_lhs GF@_lhs GF@_rhs
LABEL ?lt_op?end
PUSHS GF@_lhs
RETURN



LABEL &gt_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok_17 GF@_tlhs string@bool
EXIT int@7
LABEL ?type_ok_17
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok_18 GF@_trhs string@bool
EXIT int@7
LABEL ?type_ok_18
JUMPIFNEQ ?gt_op?lhs_not_nil GF@_tlhs string@nil
MOVE GF@_lhs bool@false
JUMP ?gt_op?end
LABEL ?gt_op?lhs_not_nil
JUMPIFNEQ ?gt_op?rhs_not_nil GF@_trhs string@nil
MOVE GF@_lhs bool@false
JUMP ?gt_op?end
LABEL ?gt_op?rhs_not_nil
JUMPIFEQ ?gt_op?execute GF@_tlhs GF@_trhs
JUMPIFNEQ ?gt_op?lhs_not_string GF@_tlhs string@string
MOVE GF@_lhs bool@false
JUMP ?gt_op?end
LABEL ?gt_op?lhs_not_string
JUMPIFNEQ ?gt_op?rhs_not_string GF@_trhs string@string
MOVE GF@_lhs bool@false
JUMP ?gt_op?end
LABEL ?gt_op?rhs_not_string
JUMPIFNEQ ?gt_op?skip_lhs_cast GF@_tlhs string@int
INT2FLOAT GF@_lhs GF@_lhs
LABEL ?gt_op?skip_lhs_cast
JUMPIFNEQ ?gt_op?skip_rhs_cast GF@_trhs string@int
INT2FLOAT GF@_rhs GF@_rhs
LABEL ?gt_op?skip_rhs_cast
LABEL ?gt_op?execute
GT GF@_lhs GF@_lhs GF@_rhs
LABEL ?gt_op?end
PUSHS GF@_lhs
RETURN



LABEL &lte_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok_19 GF@_tlhs string@bool
EXIT int@7
LABEL ?type_ok_19
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok_20 GF@_trhs string@bool
EXIT int@7
LABEL ?type_ok_20
JUMPIFNEQ ?lte_op?skip_lhs_nil_conversion GF@_tlhs string@nil
JUMPIFEQ ?lte_op?skip_lhs_to_int_conversion GF@_trhs string@string
JUMPIFEQ ?lte_op?skip_lhs_to_int_conversion GF@_trhs string@float
MOVE GF@_lhs int@0
TYPE GF@_tlhs GF@_lhs
JUMP ?lte_op?skip_lhs_nil_conversion
LABEL ?lte_op?skip_lhs_to_int_conversion
JUMPIFNEQ ?lte_op?skip_lhs_to_string_conversion GF@_trhs string@string
MOVE GF@_lhs string@
TYPE GF@_tlhs GF@_lhs
JUMP ?lte_op?skip_lhs_nil_conversion
LABEL ?lte_op?skip_lhs_to_string_conversion
MOVE GF@_lhs int@0
INT2FLOAT GF@_lhs GF@_lhs
TYPE GF@_tlhs GF@_lhs
LABEL ?lte_op?skip_lhs_nil_conversion
JUMPIFNEQ ?lte_op?skip_rhs_nil_conversion GF@_trhs string@nil
JUMPIFEQ ?lte_op?skip_rhs_to_int_conversion GF@_tlhs string@string
JUMPIFEQ ?lte_op?skip_rhs_to_int_conversion GF@_tlhs string@float
MOVE GF@_rhs int@0
TYPE GF@_trhs GF@_rhs
JUMP ?lte_op?skip_rhs_nil_conversion
LABEL ?lte_op?skip_rhs_to_int_conversion
JUMPIFNEQ ?lte_op?skip_rhs_to_string_conversion GF@_trhs string@string
MOVE GF@_rhs string@
TYPE GF@_trhs GF@_rhs
JUMP ?lte_op?skip_rhs_nil_conversion
LABEL ?lte_op?skip_rhs_to_string_conversion
MOVE GF@_rhs int@0
INT2FLOAT GF@_rhs GF@_rhs
TYPE GF@_trhs GF@_rhs
LABEL ?lte_op?skip_rhs_nil_conversion
JUMPIFEQ ?lte_op?execute GF@_tlhs GF@_trhs
JUMPIFNEQ ?lte_op?lhs_not_string GF@_tlhs string@string
MOVE GF@_lhs bool@false
JUMP ?lte_op?end
LABEL ?lte_op?lhs_not_string
JUMPIFNEQ ?lte_op?rhs_not_string GF@_trhs string@string
MOVE GF@_lhs bool@false
JUMP ?lte_op?end
LABEL ?lte_op?rhs_not_string
JUMPIFNEQ ?lte_op?skip_lhs_cast GF@_tlhs string@int
INT2FLOAT GF@_lhs GF@_lhs
LABEL ?lte_op?skip_lhs_cast
JUMPIFNEQ ?lte_op?skip_rhs_cast GF@_trhs string@int
INT2FLOAT GF@_rhs GF@_rhs
LABEL ?lte_op?skip_rhs_cast
LABEL ?lte_op?execute
LT GF@_aux1 GF@_lhs GF@_rhs
EQ GF@_lhs GF@_lhs GF@_rhs
OR GF@_lhs GF@_lhs GF@_aux1
LABEL ?lte_op?end
PUSHS GF@_lhs
RETURN



LABEL &gte_op
POPS GF@_lhs
TYPE GF@_tlhs GF@_lhs
JUMPIFNEQ ?type_ok_21 GF@_tlhs string@bool
EXIT int@7
LABEL ?type_ok_21
POPS GF@_rhs
TYPE GF@_trhs GF@_rhs
JUMPIFNEQ ?type_ok_22 GF@_trhs string@bool
EXIT int@7
LABEL ?type_ok_22
JUMPIFNEQ ?gte_op?skip_lhs_nil_conversion GF@_tlhs string@nil
JUMPIFEQ ?gte_op?skip_lhs_to_int_conversion GF@_trhs string@string
JUMPIFEQ ?gte_op?skip_lhs_to_int_conversion GF@_trhs string@float
MOVE GF@_lhs int@0
TYPE GF@_tlhs GF@_lhs
JUMP ?gte_op?skip_lhs_nil_conversion
LABEL ?gte_op?skip_lhs_to_int_conversion
JUMPIFNEQ ?gte_op?skip_lhs_to_string_conversion GF@_trhs string@string
MOVE GF@_lhs string@
TYPE GF@_tlhs GF@_lhs
JUMP ?gte_op?skip_lhs_nil_conversion
LABEL ?gte_op?skip_lhs_to_string_conversion
MOVE GF@_lhs int@0
INT2FLOAT GF@_lhs GF@_lhs
TYPE GF@_tlhs GF@_lhs
LABEL ?gte_op?skip_lhs_nil_conversion
JUMPIFNEQ ?gte_op?skip_rhs_nil_conversion GF@_trhs string@nil
JUMPIFEQ ?gte_op?skip_rhs_to_int_conversion GF@_tlhs string@string
JUMPIFEQ ?gte_op?skip_rhs_to_int_conversion GF@_tlhs string@float
MOVE GF@_rhs int@0
TYPE GF@_trhs GF@_rhs
JUMP ?gte_op?skip_rhs_nil_conversion
LABEL ?gte_op?skip_rhs_to_int_conversion
JUMPIFNEQ ?gte_op?skip_rhs_to_string_conversion GF@_trhs string@string
MOVE GF@_rhs string@
TYPE GF@_trhs GF@_rhs
JUMP ?gte_op?skip_rhs_nil_conversion
LABEL ?gte_op?skip_rhs_to_string_conversion
MOVE GF@_rhs int@0
INT2FLOAT GF@_rhs GF@_rhs
TYPE GF@_trhs GF@_rhs
LABEL ?gte_op?skip_rhs_nil_conversion
JUMPIFEQ ?gte_op?execute GF@_tlhs GF@_trhs
JUMPIFNEQ ?gte_op?lhs_not_string GF@_tlhs string@string
MOVE GF@_lhs bool@false
JUMP ?gte_op?end
LABEL ?gte_op?lhs_not_string
JUMPIFNEQ ?gte_op?rhs_not_string GF@_trhs string@string
MOVE GF@_lhs bool@false
JUMP ?gte_op?end
LABEL ?gte_op?rhs_not_string
JUMPIFNEQ ?gte_op?skip_lhs_cast GF@_tlhs string@int
INT2FLOAT GF@_lhs GF@_lhs
LABEL ?gte_op?skip_lhs_cast
JUMPIFNEQ ?gte_op?skip_rhs_cast GF@_trhs string@int
INT2FLOAT GF@_rhs GF@_rhs
LABEL ?gte_op?skip_rhs_cast
LABEL ?gte_op?execute
GT GF@_aux1 GF@_lhs GF@_rhs
EQ GF@_lhs GF@_lhs GF@_rhs
OR GF@_lhs GF@_lhs GF@_aux1
LABEL ?gte_op?end
PUSHS GF@_lhs
RETURN



LABEL program_start



PUSHS int@2
PUSHS nil@nil
CALL &gte_op
BREAK
