<program> -> <php_start> <program_body> 
<php_start> -> '<?php' func_id '(' 'strict_types' '=' integer_literal ')' ';'
<php_end> -> '?>' EOF | EOF

<program_body> -> <func_def> <program_body> | <stmt> <program_body> | <stmt_list_bracket_start> <program_body> | <php_end>

    <stmt_list_bracket_end> -> } | <stmt> <stmt_list_bracket_end> | <stmt_list_bracket_start> <stmt_list_bracket_end>

    <stmt_list_bracket_start> -> { <stmt_list_bracket_end>

		<stmt> -> if <if_stmt>
			<if_stmt> -> <if_stmt> -> ( <exp> ) { <stmt_list_bracket_end> else { <stmt_list_bracket_end>
		
		<stmt> ->  while <while_stmt>
			<while_stmt> -> ( <exp> ) { <stmt_list_bracket_end>
		
		<stmt> -> return <exp> ;

		<stmt> -> func_id <func_call> ;
			<func_call> -> ( <arg_list>
				<arg_list> -> ) | <arg> <arg_next>
				<arg_next> -> ) | , <arg> <arg_next>
					<arg> -> $var_id | string_literal | integer_literal | float_literal | null

==============================
		Řešení 2:
			// pokud ani jedno pravidlo vycházející z <stmt> nebylo namatchováno, bude se postupovat podle této sémantické akce
			if (token == "$var_id" && next_token == "=")
				if(next_next_token == "func_id")
					<stmt> -> <func_call_assignment> ;
						<func_call_assignment> -> $var_id = <func_call> ;
				else
					<stmt> -> <exp_assignment> ;
						<exp_assignment> -> $var_id = <exp> ; // zde top-down analýza předá řízení bottom-up analýze
			else
				<stmt> -> <exp> ; // zde top-down analýza předá řízení bottom-up analýze
==============================
			
	<func_def> -> function func_id ( <param_list> : <return_type> { <stmt_list_bracket_end>

		<param_list> -> ) | <type> $var_id <param_next>
		<param_next> -> ) | , <type> $var_id <param_next>

		<return_type> -> void | <type> 

			<type> -> int | ?int | float | ?float | string | ?string



